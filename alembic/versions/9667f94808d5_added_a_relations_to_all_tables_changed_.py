"""Added a relations to all tables. Changed names, added unique to email

Revision ID: 9667f94808d5
Revises: 
Create Date: 2024-03-20 23:51:44.559826

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9667f94808d5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameAuthor', sa.String(), nullable=True),
    sa.Column('surnameAuthor', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Authors_id'), 'Authors', ['id'], unique=False)
    op.create_table('Categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameCategory', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Categories_id'), 'Categories', ['id'], unique=False)
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameUser', sa.String(), nullable=False),
    sa.Column('surnameUser', sa.String(), nullable=True),
    sa.Column('passwordUser', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('emailUser', sa.String(), nullable=False),
    sa.Column('numberUser', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('emailUser')
    )
    op.create_index(op.f('ix_Users_id'), 'Users', ['id'], unique=False)
    op.create_table('Books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameBook', sa.String(), nullable=False),
    sa.Column('yearBook', sa.Integer(), nullable=True),
    sa.Column('availableBook', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['Authors.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['Categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Books_id'), 'Books', ['id'], unique=False)
    op.create_table('Histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('books_id', sa.Integer(), nullable=False),
    sa.Column('dateLoan', sa.DateTime(), nullable=False),
    sa.Column('dateReturn', sa.DateTime(), nullable=True),
    sa.Column('isReturned', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['books_id'], ['Books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Histories_id'), 'Histories', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Histories_id'), table_name='Histories')
    op.drop_table('Histories')
    op.drop_index(op.f('ix_Books_id'), table_name='Books')
    op.drop_table('Books')
    op.drop_index(op.f('ix_Users_id'), table_name='Users')
    op.drop_table('Users')
    op.drop_index(op.f('ix_Categories_id'), table_name='Categories')
    op.drop_table('Categories')
    op.drop_index(op.f('ix_Authors_id'), table_name='Authors')
    op.drop_table('Authors')
    # ### end Alembic commands ###
